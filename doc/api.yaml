openapi: 3.0.3
info:
  title: Road To Green Island Api
  description: Api to help Malagasy people to get to know our green spaces and our various species
  version: latest
servers:
  - url: 'http://localhost:8080'
paths:
  /signup:
    put:
      tags:
        - Security
      operationId: signup
      summary: sign up user
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/SignUpUser"
      responses:
        '200':
          description: signup result
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/User"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
  /token:
    post:
      tags:
        - Security
      operationId: create-token
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Credentials"
      responses:
        '200':
          description: create token
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/BearerToken"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
  /users/{user_id}:
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Users
      operationId: getUser
      responses:
        200:
          description: the user identified by user_id
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/User"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - bearerAuth: [ ]
      tags:
        - Users
      operationId: updateUserProfile
      requestBody:
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/UpdateUserProfile"
      responses:
        200:
          description: the crupdated user
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
  /whoami:
    get:
      tags:
        - Security
        - Default
      security:
        - bearerAuth: [ ]
      operationId: whoami
      summary: tells you who you are
      responses:
        200:
          description: you
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Whoami"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
  /green-spaces:
    parameters:
      - name: user_id
        in: query
        required: false
        schema:
          type: string
    get:
      operationId: getGreenSpaces
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      security:
        - bearerAuth: [ ]
      tags:
        - Green_Spaces
      responses:
        '200':
          description: list of green spaces
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/PagedResponse"
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/GreenSpace"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
  /green-spaces/{gsp_id}:
    parameters:
      - name: gsp_id
        required: true
        schema:
          type: string
        in: path
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Green_Spaces
      operationId: getGreenSpace
      responses:
        '200':
          description: green space identified by its id
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/GreenSpace"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
    put:
      security:
        - bearerAuth: [ ]
      operationId: crupdateGreenSpace
      tags:
        - Green_Spaces
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/GreenSpace"
      responses:
        '200':
          description: crupdated greenspace
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/GreenSpace"

        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
  /green-spaces/{gsp_id}/animal-statistics:
    parameters:
      - name: gsp_id
        required: true
        in: path
        schema:
          type: string
        description: filter animals by green_space
    get:
      tags:
        - Animals
      operationId: getGspAnimalsStats
      security:
        - bearerAuth: [ ]
      parameters:
        - name: is_endemic
          required: false
          in: query
          schema:
            type: boolean
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      responses:
        '200':
          description: list of species
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/PagedResponse"
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Animal"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
    put:
      tags:
        - Animals
      operationId: crupdateGspAnimalsStats
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/Animal"
      responses:
        '200':
          description: list of species
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Animal"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'

  /green-spaces/{gsp_id}/plant-statistics:
    parameters:
      - name: gsp_id
        required: true
        in: path
        schema:
          type: string
        description: filter animals by green_space
    get:
      operationId: getGspPlantsStats
      tags:
        - Plants
      security:
        - bearerAuth: [ ]
      parameters:
        - name: is_endemic
          required: false
          in: query
          schema:
            type: boolean
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      responses:
        '200':
          description: list of plants
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: "#/components/schemas/PagedResponse"
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Plant"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: crupdateGspPlantsStats
      tags:
        - Plants
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          "application/json":
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/Plant"
      responses:
        '200':
          description: list of plants
          content:
            'application/json':
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Plant"
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
  /events:
    get:
      operationId: getEvents
      security:
        - bearerAuth: [ ]
      tags:
        - Events
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
        - name: green_space_id
          schema:
            type: string
          in: query
      responses:
        '200':
          description: paged list of events
          content:
            'application/json':
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PagedResponse'
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventModel'
  /events/{event_id}:
    parameters:
      - name: event_id
        schema:
          type: string
        in: path
        required: true
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - Events
      responses:
        '200':
          description: event identified by id
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/CrupdateEvent'
    put:
      security:
        - bearerAuth: [ ]
      operationId: crupdateEvent
      tags:
        - Events
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/EventModel"
      responses:
        '200':
          description: crupdated event
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/EventModel'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestException'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorizedException'
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceNotFoundException'
    '429':
      description: Too many requests to the API
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsException'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerException'
  parameters:
    page:
      name: page
      in: query
      description: page number
      schema:
        type: integer
        minimum: 1
        default: 1
    page_size:
      name: page_size
      in: query
      description: page_size
      schema:
        type: integer
        minimum: 1
        maximum: 500
        default: 30
  schemas:
    BearerToken:
      type: object
      properties:
        token:
          type: string
    Credentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    SignUpUser:
      type: object
      allOf:
        - $ref: "#/components/schemas/Credentials"
      properties:
        type:
          $ref: "#/components/schemas/UserTypeEnum"
        id:
          type: string
    UserTypeEnum:
      type: string
      enum:
        - GREEN_REPRESENTATIVE
        - COMMON
    UpdateUserProfile:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        birthdate:
          type: string
          format: date
    UserProfile:
      type: object
      allOf:
        - $ref: "#/components/schemas/UpdateUserProfile"
      properties:
        type:
          $ref: "#/components/schemas/UserTypeEnum"
    User:
      type: object
      properties:
        id:
          type: string
        profile:
          $ref: "#/components/schemas/UserProfile"
    Whoami:
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        bearer:
          type: string
    GreenSpaceProfile:
      type: object
      properties:
        area:
          type: number
          format: double
        description:
          type: string
          description: description of the green space
        location:
          $ref: "#/components/schemas/Location"
        ticket_price:
          type: number
          format: double
    Location:
      type: object
      properties:
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
        name:
          type: string
        address:
          type: string
    GreenSpace:
      type: object
      properties:
        id:
          type: string
        user_id:
          description: owner or representative id
          type: string
        profile:
          $ref: "#/components/schemas/GreenSpaceProfile"
      required:
        - id
    AnimalGender:
      type: string
      enum:
        - M
        - F
    NumberedGspLivingSpecy:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        is_endemic:
          type: boolean
        green_space_id:
          type: string
        number:
          type: integer
    Animal:
      type: object
      allOf:
        - $ref: "#/components/schemas/NumberedGspLivingSpecy"
      properties:
        gender:
          $ref: "#/components/schemas/AnimalGender"
      required:
        - is_endemic
        - id
        - name
    Plant:
      type: object
      allOf:
        - $ref: "#/components/schemas/NumberedGspLivingSpecy"
      properties:
        id:
          type: string
        name:
          type: string
        is_endemic:
          type: boolean
      required:
        - is_endemic
        - id
        - name
    EventType:
      type: string
      enum:
        - INDOOR
        - OUTDOOR

    CrupdateEvent:
      type: object
      properties:
        id:
          type: string
        event_type:
          $ref: "#/components/schemas/EventType"
        name:
          type: string
        location:
          $ref: "#/components/schemas/Location"
        begin_datetime:
          type: string
          format: date-time
        end_datetime:
          type: string
          format: date-time
        description:
          type: string
        green_space_id:
          type: string
        meeting_fee:
          type: number
    EventModel:
      type: object
      allOf:
        - $ref: "#/components/schemas/CrupdateEvent"
      properties:
        creation_datetime:
          type: string
          format: date-time
    #############################################
    ###############  Paged Data #################
    #############################################
    PagedResponse:
      type: object
      properties:
        page_size:
          type: integer
        page_number:
          type: integer
        has_previous:
          type: boolean
        count:
          type: integer
    #############################################
    ###############  Exceptions #################
    #############################################
    ExceptionModel:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    BadRequestException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: BadRequestException
        message: Bad request
    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: NotAuthorizedException
        message: Not authorized
    ResourceNotFoundException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: ResourceNotFoundException
        message: Resource of type <T> identified by <I> not found
    TooManyRequestsException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: TooManyRequestsException
        message: Too many requests
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/ExceptionModel'
      example:
        type: InternalServerException
        message: Unexpected error

import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'org.hibernate.orm' version '6.5.2.Final'
    id 'org.graalvm.buildtools.native' version '0.10.2'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'org.openapi.generator' version '7.7.0'
}

group = 'mg.vnnd'
version = '0.0.1-SNAPSHOT'

java {
    group = 'mg.vnnd.rtgiapi'
    sourceCompatibility = '21'
    targetCompatibility = '21'
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

tasks.register('generateJavaClient', org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "java"
    inputSpec = "$rootDir/doc/api.yaml".toString()
    outputDir = "$buildDir/gen".toString()
    apiPackage = "mg.vnnd.rtgiapi.endpoint.rest.api"
    invokerPackage = "mg.vnnd.rtgiapi.app.endpoint.rest.client"
    modelPackage = "mg.vnnd.rtgiapi.endpoint.rest.model"

    configOptions = [
            serializableModel   : "true",
            serializationLibrary: "jackson",
            dateLibrary         : "custom"
    ]
    typeMappings = [
            // What date-time type to use when? https://i.stack.imgur.com/QPhGW.png
            Date    : "java.time.LocalDate",
            DateTime: "java.time.Instant",
    ]
    library = "native"

    groupId = 'mg.vnnd.rtgi'
    id = 'rtgi-api-gen'
    skipValidateSpec = false
    logToStderr = true
    generateAliasAsModel = false
    enablePostProcessFile = false
}

tasks.register('generateTsClient', org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "typescript-axios"
    inputSpec = "$rootDir/doc/api.yaml".toString()
    outputDir = "$buildDir/gen-ts".toString()
    typeMappings = [
            Date    : "Date",
            DateTime: "Date",
    ]
    additionalProperties = [
            enumPropertyNaming: "original",
            npmName           : "@rtgi-api/typescript-client",
            npmVersion        : project.properties["args"] ?: "latest"
    ]
}
tasks.register('publishJavaClientToMavenLocal', Exec) {
    dependsOn generateJavaClient
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine './.shell/publish_gen_to_maven_local.bat'
    } else {
        commandLine './.shell/publish_gen_to_maven_local.sh'
    }
}
tasks.compileJava.dependsOn publishJavaClientToMavenLocal

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'io.swagger:swagger-annotations:1.6.12'
    implementation 'mg.vnnd.rtgi:rtgi-api-gen:latest'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}
